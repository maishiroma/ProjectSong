<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ElectroDoor_DS_sprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Terrain_obj</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Basic variables for electro door

inverseDoor = false;    // If the switch is not activated, the door is open. Opposite of normal door
isOpen = false;         // Is the door open?
switchID = 0;           // The ID of the switch that's associated with this door
doorSpeed = 1;          // How fast will the door open and close?
yOrig = y;              // Stores the original y position of the door
yNew = yOrig - 96;      // What y coord will the dorr move toward?
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Door opening and closing behavior

if(instance_find(Switch_obj, switchID).isActive == false)
{  
    if(inverseDoor == false)
    {
        // Move back to the closed position.
        if(y != yOrig)
            move_towards_point(x,yOrig,doorSpeed);
        else
            vspeed = 0;
    }
    else
    {
        // Opposite. The door will move to open position.
        if(y != yNew)
            move_towards_point(x,yNew,doorSpeed);
        else
            vspeed = 0;
    }
}
else if(instance_find(Switch_obj, switchID).isActive == true)
{
    if(inverseDoor == false)
    {
        // Move to open position
        if(y != yNew)
            move_towards_point(x,yNew,doorSpeed);
        else
            vspeed = 0;
    }
    else
    {
        // Opposite. The door will move to close position
        if(y != yOrig)
            move_towards_point(x,yOrig,doorSpeed);
        else
            vspeed = 0;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
